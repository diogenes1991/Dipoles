**************************************************
*                                                *
* declaration of common symbols                  *
*                                                *
**************************************************

* general
**********

s d, ep;
dimension d;
.sort
cf acc;

* lorentz indices (no autodeclare due to bug in FORM)
    
*#do i=0,6
*    #do j=0,30
*        i vsum`i'c`j';
*    #enddo
*#enddo
*
*
*set vsumset:
*#do i=0,6
*    #do j=0,30
*        vsum`i'c`j'
*    #enddo
*#enddo
*;
*
** unique sum indices
*#do i=0,6
*    #do j=0,30
*        i isum`i'c`j';
*    #enddo
*#enddo
*
*
*set isumset:
*#do i=0,6
*    #do j=0,30
*        isum`i'c`j'
*    #enddo
*#enddo
*;
.sort
        
i v;
#do i=0,19
    i v`i';
    #do j=0,19
        i v`i'l`j';
        i v`i'l`j'l;
        i v`i'l`j'r;
        i v`i'l`j'in;
        i v`i'l`j'lin;
        i v`i'l`j'rin;
        i v`i'l`j'out;
        i v`i'l`j'lout;
        i v`i'l`j'rout;
    #enddo
#enddo

* Special 4-dim indices for HV scheme, by Seth
#do i=0,19
    i vhv`i';
    i vhv`i'l=0;
    i vhv`i'r=0;
#enddo

#do i = 1,6
    #do j =`i',6
        s p`i'p`j';
        #do n = 1,5
            s p`i'p`j'pow`n';
        #enddo
    #enddo
#enddo

#do i=0,19
    i v`i'el=0;
    i v`i'er=0;
#enddo
set ve:<v0el>,...,<v18el>,<v0er>,...,<v18er>;
set vhv:vhv0,...,vhv18;
set vhvext:<vhv0l>,...,<vhv18l>,<vhv0r>,...,<vhv18r>,<v0el>,...,<v18el>;

#do l=0,5
    #do i=0,19
        i v`i'l;
        i v`i'r;
        i v`i'p`l';
        i v`i'p`l'l;
        i v`i'p`l'r;
        #do j=0,19
            i v`i'l`j'p`l';
            i v`i'l`j'p`l'l;
            i v`i'l`j'p`l'r;
            i v`i'l`j'p`l'in;
            i v`i'l`j'p`l'lin;
            i v`i'l`j'p`l'rin;
            i v`i'l`j'p`l'out;
            i v`i'l`j'p`l'outl;
            i v`i'l`j'p`l'outr;
        #enddo
    #enddo
#enddo


i v1000l1l, v1000l2l, v1000l3l, v1000l4l, v1000l5l, v1000l5l, v1000l6l, v1000l7l, v1000l8l;
i v1001l1l, v1001l2l, v1001l3l, v1001l4l, v1001l5l, v1001l5l, v1001l6l, v1001l7l, v1001l8l;
i v1002l1l, v1002l2l, v1002l3l, v1002l4l, v1002l5l, v1002l5l, v1002l6l, v1002l7l, v1002l8l;
i v1003l1l, v1003l2l, v1003l3l, v1003l4l, v1003l5l, v1003l5l, v1003l6l, v1003l7l, v1003l8l;
i v1004l1l, v1004l2l, v1004l3l, v1004l4l, v1004l5l, v1004l5l, v1004l6l, v1004l7l, v1004l8l;
i v1005l1l, v1005l2l, v1005l3l, v1005l4l, v1005l5l, v1005l5l, v1005l6l, v1005l7l, v1005l8l;
i v1006l1l, v1006l2l, v1006l3l, v1006l4l, v1006l5l, v1006l5l, v1006l6l, v1006l7l, v1006l8l;
i v1007l1l, v1007l2l, v1007l3l, v1007l4l, v1007l5l, v1007l5l, v1007l6l, v1007l7l, v1007l8l;
i v1008l1l, v1008l2l, v1008l3l, v1008l4l, v1008l5l, v1008l5l, v1008l6l, v1008l7l, v1008l8l;

set v100:<v1000l1l>,...,<v1000l8l>, <v1001l1l>,...,<v1001l8l>, <v1002l1l>,...,<v1002l8l>,
         <v1003l1l>,...,<v1003l8l>, <v1004l1l>,...,<v1004l8l>, <v1005l1l>,...,<v1005l8l>,
         <v1006l1l>,...,<v1006l8l>, <v1007l1l>,...,<v1007l8l>, <v1008l1l>,...,<v1008l8l>;


#do i=0,19
    i vk`i';
    i vkp`i';
    #do j=0,6
        i vp`j'`i';
    #enddo
#enddo


* Kronecker for color
cf delta(Symmetric);
cf delta3(Symmetric);

* Temporary d_ tensor for 4d (by Seth)
cf d4d;

* momenta (up to 6-point functions)
v P, p1, p2, p3, p4, p5, p6;
v k;
v K,K1, K2, K3, K4, K5, K6;
v k1, k2, k3, k4, k5, k6;

set extmom:p1,p2,p3,p4,p5,p6;

* masses
s M, m, m1, m2, m3, m4, m5, m6;

s args;

* renormalization factor (added by Seth)
cf Z;
s pole;

s mtlog, mblog, mqlog, mQlog, mulog, mvlog, mWlog, mZlog;

* propagators
f SF;
cf DS, DG, DV;
cf SS(Symmetric);
cf SSinv(Symmetric);

* vertices
*
* VVV(k1,a1,k2,a2,k3,a3) = (k1(a3) - k2(a3))*d_(a1, a2) + ...
*
* S(k) = k.k
*
* Hold for loop momenta
* KK(k(mu)) = k(mu);
*
* T(k, a1, a2) = k.k*d_(a1,a2) - k(a1)*k(a2)
*
* G(i,a) = g_(i,a)

cf VVV, VVO;
cf S, KK;
f G, G5;

* gauge parameter (Feynman gauge: xi = 0)
s xi(:1);

* flavours and SU(3) invariants
s nf;
s CF, CA, TF, NF, NA;
cf color;

* Rieman zetas
s z2, z3, z4, z5;

* own denominator 
cf denom;

* color package (Vermaseren) 
#include color.h

.sort
dimension cOlNA;
s cOlNA, cOlNR;
#do i = 0, 30
    i cOli`i'e;
    i cOli`i'l;
    i cOli`i'r;
    i cOlj`i'l;
    i cOlj`i'r;
#enddo
set cOlie:<cOli0e>,...,<cOli29e>;
.sort
dimension d;

s n,n1,n2,n3,n4,n5,n6,n7,n8,N;

#do i = 0,10
    s n`i'l;
#enddo
set nl:<n0l>,...,<n9l>;
#do i = 0,10
    s n`i'r;
#enddo
set nr:<n0r>,...,<n9r>;

cf sDS, TI, TT;

f SC, SSP;
cf SCC;
cf cc;

*Tensor cOlD(symmetric);

f lm, rm;
f func, Gm, ff, ff1, ff2, ff3, ff4;


* external fields

f Ub, UbBar, Vb, VbBar, Uu, UuBar, Vu, VuBar, Ud, UdBar, Vd, VdBar, Ut, VtBar, UqBar, Vq;;
cf EpsG, EpsGStar, EpsW, EpsWStar, EpsZ, EpsZStar, EpsA, EpsAStar;

s fUb,fUbBar,fVb,fVbBar,fUu,fUuBar,fVu,fVuBar,fUd,fUdBar,fVd,fVdBar, fUt, fVt, fUtBar;
s fVtBar, fVqBar, fUqBar, fVq, fUq;
s fEpsG, fEpsGStar, fEpsW, fEpsWStar, fEpsZ, fEpsZStar, fEpsA, fEpsAStar;

set quarks: fUb,fUbBar,fVb,fVbBar,fUu,fUuBar,fVu,fVuBar,fUd,fUdBar,fVd,fVdBar, fVt, fVtBar, fUt, fUtBar,
            fVq, fVqBar, fUq, fUqBar;
set vquarks: fVb,fVu,fVd, fVq, fVt;
set uquarks: fUb,fUu,fUd, fUq, fUt;
set ubarquarks: fUbBar,fUuBar,fUdBar, fUqBar, fUtBar;
set vbarquarks: fVbBar,fVuBar,fVdBar, fVqBar, fVtBar;
set gluons: fEpsG, fEpsGStar;
set bosons: fEpsW, fEpsWStar, fEpsZ, fEpsZStar, fEpsA, fEpsAStar;

set vectorbosons: fEpsG, fEpsGStar, fEpsW, fEpsWStar, fEpsZ, fEpsZStar, fEpsA, fEpsAStar;

f QQ;
cf VB;

v q1,q2,q3,q4,q5,q6,q7,q8;

s mb, mu, mW, mZ, md, mH;
s QWWZ;
s yt, yb, gWH, gZH;
cf pol, ds, sme;
cf tt(symmetric);
s Zv, Za;

s Qq, Qt, Qb, e, g, mt;
f Vt, UtBar, VqBar, Uq, EpsAStar;

s l, r;

*renorm constants
cf dZm;
s X;
cf mass;

cf cdelta(Symmetric);

cf epc;

s Qqi, QQi;
s mQ, mq;
s nf, nif, nff;

s Qqivv, Qqiav, Qqvv, Qqav, Quvv, Quav, Qdvv, Qdav, Qtvv, Qtav, Qbvv, Qbav, QQiav, QQivv;
s WudC, WubC, WusC, WtbC;
* new constants for EW; couplings/constants should be auto-added in future
s g3H,gHchi,gchiHA,gchiHZ,gphiA,gphiZ,gphiHW,gphichiW,gphiA,gphiZ,gphiHW,gphichiW,gphichiW,gWZphi,gWAphi,ychit,ychib,yphivv,yphiav;

* renorm constants
s dZAb, dZmb, dZVb, dZAZ, dZ1Z, dZAb0, dZmb0, dZVb0, dZAZ0, dZ1Z0, dZextZ;

#define bracketconstants "e, g, Qt, Qb, Qq, Qqi, QQi, nf, nif, nff,
Qqivv, Qqiav, Qqvv, Qqav, Quvv, Quav, Qdvv, Qdav, Qtvv, Qtav, Qbvv, Qbav, QQiav, QQivv, 
WudC, WubC, WusC, WtbC, QWWZ, yt, yb, gWH, gZH, g3H, gHchi, gchiHA, gchiHZ,
gphiA,gphiZ,gphiHW,gphichiW,gphiA,gphiZ,gphiHW,gphichiW,gphichiW,gWZphi,gWAphi,
ychit,ychib,yphivv,yphiav,dZAb,dZmb,dZVb,dZAZ,dZ1Z,dZAb0,dZmb0,dZVb0,dZAZ0,dZ1Z0,dZextZ, pole "
#define bracketcolor "NF, NA, CF, CA, cOlI2R, cOlNA"
#define bracketmasses "mq, mu, md, mb, mt, mQ, mZ, mW, mH, mtlog, mblog"

f PL, PR;

.global
